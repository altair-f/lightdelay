(* !!! for 'models' only! *)
(* from 02.11.2024 this file is under controle of Git *)

If[!ValueQ[dataFileName],Print["This program demands some datafile before it, stop"];Abort[]];
If[!MemberQ[FileNames[], "mathoutput"],
	Print["No mathoutput exists"];Definition[dataFileName]>>>mathoutput,
	(*backupFile=OpenRead["mathoutput"];firstLine = Read[backupFile, String];Close[backupFile];(*Print[" first line  = ",firstLine];*)*)
	<<mathoutput;
	];

firstWord[string_String] := StringTake[string, StringPosition[string, " ="][[1, 1]] - 1];			(* 26.11.2024 *)
varlist=firstWord /@ Select[ReadList["mathoutput",String],StringPosition[#, "="] =!= {} &];

(* test *) (*Print[" G[0,0,0] exists?    - ",ValueQ[G[0,0,0]],"    & it is ",G[0,0,0]];*)

(* test *) (*Print[" content of varlist = ",varlist];*)

SetAttributes[BB, HoldAll];
BB[var_,def_]:=Block[{dat1,dat2},																	(* 17.11.2024 *)
	dat1=Date[];
	If[noBBprn=!=1,Print["prepared: ",ValueQ[var]]];
	If[!ValueQ[var],var=def];
	dat2=Date[]-dat1;
	If[dat2=!={0,0,0,0,0,0},Print["time: ",dat2]]
];



SetOptions[$FrontEnd, Background -> GrayLevel[0.2], FontColor -> GrayLevel[1], FontSize -> 18];
(*SetOptions[$FrontEnd, Background -> GrayLevel[1], FontColor -> GrayLevel[0], FontSize -> 18];*)
SetOptions[OpenWrite["texoutput.tex"],PageWidth->Infinity];
SetOptions[OpenAppend["mathoutput"],PageWidth->Infinity];											(* 12.11.2024 *)

dadate=Date[];

(*BB=Set;*)

(* this program demands some metric tensor before it *)

If[!dontclear===1, Print["General case"]; Clear["`*"]];    dontclear=.;

If[!ValueQ[VG],Print["    Write, please, some metric tensor!"];Abort[]];
If[!ValueQ[sim],Print[" No simplification helper rules defined"];sim={}];
If[!ValueQ[antisim],Print["No antisims"];antisim={}];


var=x/@{0,1,2,3};
vary=var/.x->y;


SF=StringForm;
OF=OutputForm;
IF=InputForm;
TF=TraditionalForm;
SeqF=SequenceForm;
SB=Subscript;
SPB=Subsuperscript;
SPS=Superscript;
FS=FullSimplify;
EA=ExpandAll;
ToS=ToString;



(* ------------------------- BEAUTY ----------------------------*)

If[!ValueQ[subscribed],subscribed={a,c,t,u,l,fi,A,F,Fx,et,hi,psi,xi,Jdown,FdownF}];
If[!ValueQ[superscribed],superscribed={x,y,Fup,Aup,J,Jx}];
If[!ValueQ[grecletter],grecletter={al,be,ga,de,ka,ep,la,mu,nu,ro,si,k,A,B}~Cases~_Symbol];					(* 19.09.2024 *)

grecletter=DeleteCases[grecletter,jt_Integer];	(* a piece of "POLUNDRA" from june 2017 *)
subscribed=DeleteCases[subscribed,jt_Integer];	(* a piece of "POLUNDRA" from june 2017 *)

(* 'stf' is a set of diff. indexes with a comma, 'ssf' is a set of funct. indexes *)

stf[xt_]:= Block[{a,i,k,st}, st=","; a=List @@ xt[[0,0]]; Do[st=st <> ToS @ xt[[i,1]],{i,Length[a]},{k,a[[i]]}]; st];				(* 08.02.2024 *)
ssf[xt_]:=StringJoin @@ ToS /@ xt[[0,1]];

SetAttributes[FoF, HoldFirst];																										(* 19.09.2024 *)
FoF[xx_, yy_] := Block[{}, If[!ValueQ[xx],Format[xx] := yy; Format[xx, TeXForm] := yy,	Print["--- warning!   ",yy," = ",xx]]];

Format[ppp:Derivative[__][(yt_/;subscribed~MemberQ~yt)@__]@__] := SB[yt, ssf[ppp] <> stf[ppp]];										(* 09.04.2024 *)
Format[ppp:Derivative[__][(yt_/;subscribed~MemberQ~yt)@__]@__, TeXForm] := SB[yt, ssf[ppp] <> stf[ppp]];
Format[ppp:Derivative[__][(yt_/;MemberQ[superscribed,yt])[__]][__]] := SPB[yt, " " <> stf[ppp], ssf[ppp]];
Format[ppp:Derivative[__][(yt_/;MemberQ[superscribed,yt])[__]][__], TeXForm] := SPB[yt, " " <> stf[ppp], ssf[ppp]];

WPQ[ex__] := ex//.{
	
	Sum[it__[k]jt__[k], {k, 3}] -> SB[it, "n"]SPS[jt, "n"],
	Sum[it__[k]jt__[k][xx_], {k,2,3}] -> SB[it, "p"]Vupk[jt,xx],

	g[2,3][xx__]jt__[2]jt__[3]  -> (Guppq[xx]SB[jt,"p"]SB[jt,"q"] - g[2,2][xx]jt[2]^2 - g[3,3][xx]jt[3]^2)/2,
	
	
	2*la[2]*g[2, 2][x[0]] + 2*la[3]*g[2, 3][x[0]] ->2 Gpqlaq[2,xx]SB[la,"q"],
	2*la[2]*g[2, 3][x[0]] + 2*la[3]*g[3, 3][x[0]] ->2 Gpqlaq[3,xx]SB[la,"q"],
	
	Gdown[2,3][xx__]jt__[2]jt__[3]->(Gdownpq[xx]SPS[jt,"p"]SPS[jt,"q"]-Gdown[2,2][xx]jt[2]^2-Gdown[3,3][xx]jt[3]^2)/2,
	Gdown[2,3]'[xx__]jt__[2]jt__[3]->(Gdownpq[xx]'SPS[jt,"p"]SPS[jt,"q"]-Gdown[2,2]'[xx]jt[2]^2-Gdown[3,3]'[xx]jt[3]^2)/2
	
};

w={};

Sfitjt:=SF["````",it,jt];													(* 23.05.2024 *)

al  ~FoF~\[Alpha];
be  ~FoF~\[Beta];
ga  ~FoF~\[Gamma];
de  ~FoF~\[Delta];
ep  ~FoF~\[Epsilon];
eps ~FoF~\[CurlyEpsilon];
et  ~FoF~\[Eta];
ka  ~FoF~\[Kappa];
la  ~FoF~\[Lambda];
La  ~FoF~\[CapitalLambda];
mu  ~FoF~\[Mu];
nu  ~FoF~\[Nu];
xi  ~FoF~\[Xi];
pi  ~FoF~\[Pi];
ro  ~FoF~\[Rho];
si  ~FoF~\[Sigma];
ta  ~FoF~\[Tau];
th  ~FoF~\[Theta];
fi  ~FoF~\[Phi];
hi  ~FoF~\[Chi];
psi ~FoF~\[Psi];
Om  ~FoF~\[Omega];
Del ~FoF~\[CapitalDelta];

FoF[ Aup ,"A"];
FoF[ Jx ,"J"];
FoF[ Jdown ,"J"];
FoF[ Fup ,"F"];
FoF[ FdownF ,"F"];
FoF[ Gdown ,"G"];
FoF[ GG ,"G"];
FoF[ gdown ,"g"];
FoF[ Fx ,"F"];
FoF[ GPQ',SB["Q",",0"]];
FoF[ GPQ,"Q"];
FoF[ cc ,"c"];
FoF[ ee ,"e"];
FoF[ ud ,"u"];
FoF[ MM ,"m"];

FoF[ xS @it_, SPB["x","S",SF[" ``",it]]];
FoF[ yS @it_, SPB["y","S",SF[" ``",it]]];
FoF[ yD @it_, SPB["y","D",SF[" ``",it]]];
FoF[ xD @it_, SPB["x","D",SF[" ``",it]]];


FoF[ #[it_], SB[#, it]]  & /@ grecletter;									(* 30.10.2024 *)
FoF[ #[it_], SPS[#, it]] & /@ superscribed;									(* 10.04.2024 *)
FoF[ fi[x[it_]], SB[fi,it]];												(* <- we loose *)

FoF[ # @__,         #]              & /@ {g,GG};							(* 23.05.2024 *)
FoF[ #[it__]@__,    SPS[#, it]]     & /@ {Aup,J,Jx,b};
FoF[ #[it_,jt_]@__, SPS[#, Sfitjt]] & /@ {Fup,g};
FoF[ #[it_,jt_],    SPS[#, Sfitjt]] & /@ {Fup};
FoF[ #[it__],       SPS[#, it]]     & /@ {u};
FoF[ #[it__],       SB [#, it]]     & /@ {cc,ud,Jdown};
FoF[ #[it__]@__,    SB [#, it]]     & /@ {A,hi,xi,et,psi,Jdown};
FoF[ #[it_,jt_],    SB [#, Sfitjt]] & /@ {F,ka};
FoF[ #[it_,jt_]@__, SB [#, Sfitjt]] & /@ {F,Fx,gdown,Gdown,FdownF};

FoF[Guppq[it_], SPS["g","pq"]];
FoF[Gdownpq[it_],SB["g","pq"]];
FoF[Gpqlaq[it_,xx_],SPS["g",SeqF["q",it]]];
FoF[Vupk[jt_,xx_],SPS[jt, "p"]];


FoF[ dddx @it_, SPS["dx",it]];

FoF[ Jprivil[it_], SPB["J","priv",it]];
FoF[ Jsync[it_], SPB["J","sync",it]];
FoF[ DalA[it_], SeqF[\[Square]SB["A",it]] ];
FoF[ DalAup[it_], SeqF[\[Square]SPS["A",it]] ];

Unprotect[Abs, DiscreteDelta];												(* 09.04.2024 *)
FoF[ Abs[it__], SF["|``|",it]];
FoF[ DiscreteDelta,de];
Protect[Abs, DiscreteDelta];

FoF[ it__'  @jt__ , it[jt]'];
FoF[ it__''  @jt__ , it[jt]''];
FoF[ it__'''  @jt__ , it[jt]'''];


FoF[ #[x[0]],        SB[#, "0"]]     & /@ {a,b,c};
FoF[ #[xD[0]],       SB[#, "D"]]     & /@ {a,b,c};
FoF[ #[xS[0]],       SB[#, "S"]]     & /@ {a,b,c};

(*--------------------------- ATTENTION MESSAGE --------------------------------------------*)

attentioncounter=0;

ATTENTION[message_]:=Block[{},
	attentioncounter++;
	Print[];Print[];Print[];
	Print["             ===== ",attentioncounter,".  ATTENTION!!! ",message,"    ====="];
	Print[];Print[];Print[];
];

(*--------------------------- CONVOLUTIONS -------------------------------------------------*)
(*
convol={
	Sum[vg[al, be]D[F[1, al] @@ var, x[be]], {al, 0, 3}, {be, 0, 3}]->SumGijF1ij//FS
	};

FoF[SumGijF1ij,SequenceForm[SPS["g",SequenceForm[al,be]],SB["F",SequenceForm[1,al,",",be]]]];
*)
w1={ep^2->1,1/ep->ep};   w1=DeleteCases[w1,jt_Integer->it_];  (* short epsylon-operations *)

(*============================= PREAMBLES =================================================*)

texPreamble:=Block[{},

	OF["\\documentclass{report}				"]>>texoutput.tex;
	OF["\\usepackage[russian]{babel}       	"]>>>texoutput.tex;
	OF["\\usepackage[utf8]{inputenc}       	"]>>>texoutput.tex;
	OF["\\usepackage{amssymb}              	"]>>>texoutput.tex;
	OF["%\\usepackage{amsmath}             	"]>>>texoutput.tex;
	OF["\\usepackage{xcolor}               	"]>>>texoutput.tex;
	OF["\\topmargin=-1.0cm                 	"]>>>texoutput.tex;
	OF["\\oddsidemargin=-0.5cm             	"]>>>texoutput.tex;
	OF["\\textheight=24 truecm             	"]>>>texoutput.tex;
	OF["\\textwidth=174 truemm             	"]>>>texoutput.tex;
	OF["\\def\baselinestretch{1.2}         	"]>>>texoutput.tex;
	OF["\\newcommand{\bb}{\begin{equation}}	"]>>>texoutput.tex;
	OF["\\newcommand{\ee}{\end{equation}}  	"]>>>texoutput.tex;
	OF["\\newcommand{\Mfunction}{}		    "]>>>texoutput.tex;
	OF["\\newcommand{\Muserfunction}{}		"]>>>texoutput.tex;
	OF["\\newcommand{\Mvariable}{}    		"]>>>texoutput.tex;
	OF["\\newcommand{\RawWedge}{^}    		"]>>>texoutput.tex;
	(*OF["\\newcommand{\EmptyDownTriangle}{\\nabla}"]>>>texoutput.tex;*)
	OF["\\renewcommand{\$}{$}	    		"]>>>texoutput.tex;

	
	OF["\begin{document}"]>>>texoutput.tex;
(*	
	OF["(* \n
		Definitions: \n\n
		'ddet' - a determinant of the metric tensor,\n
		'SS' - an action,\n
		'hamjac' - left part of Hamilton-Jacoby Eq, where phi[0] is unknown,\n
		'dsolvhamjac' - the solution of Hamilton-Jacoby Eq relative phi[0],\n
	*)"]>>>mathoutput;
	OF[""]>>>mathoutput;
*)
];

texPreamble;

(*============================= OUTPUT FUNCTIONS =================================================*)

(* You can define a 'equationLabel' before this funct. *)

texPrint[prefix_,expression_,suffix_]:=Block[{},

	If[noTex=!=1,
		OF["\\bb"]>>>texoutput.tex;
		If[prefix =!= "",prefix//TeXForm>>>texoutput.tex];
		expression//TeXForm>>>texoutput.tex;
		If[suffix =!= "",suffix//TeXForm>>>texoutput.tex];
		If[ValueQ[equationLabel],OF[SF["\\label{``}",equationLabel]]>>>texoutput.tex;equationLabel=.];
		OF["\\ee"]>>>texoutput.tex;
	];
];

SlashRemover[xx_]:=If[xx[[0]]===String,StringReplace[xx,{"\\"->""}],xx];

texHeadPrint[header_]:=Block[{},

	Print[];	
	Print["-----",SlashRemover[header],"------"];
	header//TeXForm>>>texoutput.tex;
	texHeaderForListPrint=header;											(* 13.11.2024, exp.feature for preventing double printing of headers to the 'mathoutput' *)
];

(* !!! for lists beginned at 1 *)	(* syntax example: 'expr, " = 0", FS' - 2-th must be a string, 3-th - action like FS, EA, TF etc. *)

SetAttributes[texListPrint, HoldAll];
texListPrint[list_,epiplya___String|epiplya___SequenceForm|epiplya___SeqF,actioplya___Symbol|actioplya___List]:=Block[{},								(* 14.11.2024 *)
	Print["variable: ",Unevaluated[list]];
	If[ValueQ[prolog],prolog=SeqF[prolog, " = "],prolog=""];
	If[epiplya[[0]]===0,epilog="",epilog=epiplya];
	Which[actioplya[[0]]===0,action=Identity,  actioplya[[0]]===Symbol,action=actioplya,  ListQ[actioplya],action=Last[ComposeList[actioplya, #]]& ];
	If[list[[0]]===List,
		Do[Print[i,".   ",prolog,list[[i]]//action,epilog];             texPrint[prolog,list[[i]]//action,epilog],{i,Length[list]}],
		Print[SlashRemover[prolog],list//action,SlashRemover[epilog]];  texPrint[prolog,list//action,epilog]
	];
	If[noMat=!=1&&(!MemberQ[varlist,Unevaluated[list]//ToString]),
		If[ValueQ[texHeaderForListPrint],OF[""]>>>mathoutput;OF[SF["(* ---- `` ----*)",texHeaderForListPrint]]>>>mathoutput];							(* 13.11.2024 *)
		Definition[list]>>>mathoutput];
	Clear[noTex,noMat,prolog,epilog,action,texHeaderForListPrint];
];


innerPrint:=Block[{formula},																(* 30.05.2024 *)
	PostAction;
	noBBprn=1;
	If[Type=="Vector",formula=Name[i],formula=Name[i,j]];
	If[{nonZero,formula}=!={1,0},
		Print[prolog, formula//bebeauty, epilog]; texPrint[texprolog, formula//bebeauty, epilog]]
];


newPrintingFunction := Block[{bebeauty},													(* 17.04.2024 *)
	If[noTex=!=1,texHeadPrint[Header],Print[Header]];
	Print["this variable is: ",Name,",       is in varlist?  - ",MemberQ[StringMatchQ[#1, (Name//ToS)<>"*"] & /@ varlist, True]];
	
	If[ValueQ[prolog],prolog=SeqF[prolog, " = "],prolog=""];						(* empty 'prolog' can be replaced by the 'Enumerate'? *)
	
	If[ValueQ[texprolog],texprolog=SeqF[texprolog, " = "],texprolog=prolog];										(* 31.05.2024, may be dangerous! *)
	If[Enumerate==1,If[Type=="Vector",prolog=SeqF[i,".   ",prolog],prolog=SeqF[i,j,".   ",prolog]]];				(* 03.06.2024, risk *)
	If[!ValueQ[epilog],epilog=""];
	Which[!ValueQ[Beauty],bebeauty=Identity,  Beauty[[0]]===Symbol,bebeauty=Beauty,   ListQ[Beauty],bebeauty=Last[ComposeList[Beauty, #]]& ];
	If[!MemberQ[StringMatchQ[#1, (Name//ToS)<>"*"] & /@ varlist, True],												(* 27.11.2024 *)
		Which[
			Type=="Vector",     Do[ Name[ i ]=Action; innerPrint,{i,0,3}],
			Type=="FullMatrix", Do[ Name[i,j]=Action; innerPrint,{i,0,3},{j,0,3}],
			Type=="SymMatrix",  Do[ Name[i,j]=Action; innerPrint,{i,0,3},{j,i,3}];		Do[Name[j,i]= Name[i,j],{i,0,3},{j,i+1,3}],
			Type=="ASymMatrix", Do[ Name[i,j]=Action; innerPrint,{i,0,3},{j,i+1,3}];	Do[Name[j,i]=-Name[i,j],{i,0,3},{j,i+1,3}]; Do[Name[i,i]=0,{i,0,3}]
		];
		ClearAttributes[Definition,HoldAll]; Definition[Name]>>>mathoutput; SetAttributes[Definition,HoldAll],
		Which[
			Type=="Vector",     Do[ innerPrint,{i,0,3}],
			Type=="FullMatrix", Do[ innerPrint,{i,0,3},{j,0,3}],
			Type=="SymMatrix",  Do[ innerPrint,{i,0,3},{j,i,3}];		Do[Name[j,i]= Name[i,j],{i,0,3},{j,i+1,3}],
			Type=="ASymMatrix", Do[ innerPrint,{i,0,3},{j,i+1,3}];		Do[Name[j,i]=-Name[i,j],{i,0,3},{j,i+1,3}]; Do[Name[i,i]=0,{i,0,3}]
		];
	];
	Clear[Header,Name,Type,Action,PostAction,prolog,texprolog,epilog,Beauty,noTex,nonZero,Enumerate,noBBprn];
];



(*-------------------  standard 2024 (no n, no w1, no w)      --------------------------*)

OF[" \\section{Metric tensor and interval in privileged CS}"]>>>texoutput.tex;

texHeadPrint[" Recent metric in privileged CS "];

If[ValueQ[ddelt] && ddelt=!=1,
	VG1=VG ddelt//Simplify; Print[1/ddelt,"  ",VG1//MatrixForm]; VG1=.,
	Print[SPS["g","ij"]," = ",VG/.sim//MatrixForm];
	OF["\\bb g^{ij}\\ =\\ \\left("]>>>texoutput.tex;
	VG/.sim//MatrixForm//TeXForm>>>texoutput.tex;
	OF["\\right) \\ee"]>>>texoutput.tex;
	];
vdet~BB~(Det[VG]//FS); 
	prolog=SeqF["Det|",SPS["g","ij"],"|"];
	texListPrint[vdet,SeqF[(*" ","\[Congruent]"," ",vdet/.sim,*)" < 0"]];						(* latex error: $ *)


BB[ddet, 1/vdet/.sim];										(* first usage 'BB' 08.06.2024 *)
	prolog=SeqF["\\det ", SB["g", "ij"]];
	texListPrint[ddet," = g < 0"];

sqrtddet~BB~((FS[Sqrt[-ddet],si>0])/.sim);					(* infix form of 'BB' *) 
	prolog=Sqrt[-g];
	noTex=1;
	texListPrint[sqrtddet]; 

NG~BB~((Inverse[VG]//FS)/.sim); Print[SB["g","ij"]," = ",NG];

Do[ng[i,j]=NG[[i+1,j+1]]; vg[i,j]=VG[[i+1,j+1]],{i,0,3},{j,0,3}];

dssquare=Sum[ng[i,j]dddx[i]dddx[j],{i,0,3},{j,0,3}]~Collect~g[_];
	OF["\\bb ds^2\\ =\\ "]>>>texoutput.tex;
	dssquare//TeXForm>>>texoutput.tex;
	OF["\\ee"]>>>texoutput.tex;


standart:=Block[{},

	If[!ValueQ[G[0,0,0]],																							(* 18.11.2024 *)
	Do[G[i,j,k]=Sum[vg[k,m](D[ng[i,m],x[j]]+D[ng[j,m],x[i]]-D[ng[i,j],x[m]])/2,{m,0,3}]//FS;
		(*If[G[i,j,k]=!=0,Print[SPB[\[CapitalGamma],SF["````",i,j],SF["  ``",k]],"  =  ",G[i,j,k]];];*)
		G[j,i,k]=G[i,j,k],{i,0,3},{j,i,3},{k,0,3}];
	
	Do[R[i,k]=Sum[D[G[i,k,j],x[j]]-D[G[i,j,j],x[k]]+Sum[G[i,k,j]*G[j,m,m],{m,0,3}]-Sum[G[i,j,m]*G[k,m,j],{m,0,3}],{j,0,3}]//EA//Simplify;
		If[R[i,k]=!=0,Print[SB[R,SF["````",i,k]],"  =  ",R[i,k]]];
		,{i,0,3},{k,i,3}];
	Do[R[k,i]=R[i,k],{i,0,2},{k,i+1,3}];
	
	RR=Sum[vg[k,m]R[k,m],{k,0,3},{m,0,3}]//Expand//Simplify;
	
	Definition[G]>>>mathoutput;
	Definition[R]>>>mathoutput;
	Definition[RR]>>>mathoutput;
	];
];

standart;

(* we must keep it here, after 'standart' for preventing of writing format to 'mathoutput' *)
FoF[ #[it_,jt_]@__, SPS[#, Sfitjt]] & /@ {G};																		(* 18.11.2024 *) 

(*============================= MAIN =================================================*)
<<caculus32;
(* for what? - for synchronyzation of 2 branches. we try to imrove calculus for both branches *)

(* ======================= ACTIONS =========================*)

maxw1t;
LorentzGauge;
	


(* ======================= TERMINATION =========================*)
OF["\\end{document}"]>>>texoutput.tex;
Close["texoutput.tex"];
Close["mathoutput"];

EmitSound[{Play[Sin[700*t+25*t*Sin[350*t]],{t,0,0.5}]}]; (* бу-га-га! *)

(*Print["OS Version: ",$System];*)
Print["Data file:    ",dataFileName];dataFileName=.;
Print["Current file:    ",$Input];
Print["Total time:    ",Date[]-dadate];
Print["Current Memory Usage:    ",SetPrecision[MemoryInUse[]/1048576, 4], " M"]
Print["Maximum Memory Usage:    ",SetPrecision[MaxMemoryUsed[]/1048576, 4], " M"]
